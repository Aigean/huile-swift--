

//
//  MapViewController.m
//  huile
//
//  Created by  周毅 on 16/3/23.
//  Copyright © 2016年 Aigean. All rights reserved.
//
#import <CoreLocation/CoreLocation.h>
#import <MapKit/MapKit.h>

#import "MapViewController.h"
#import "AnnotationModel.h"

@interface MapViewController ()<CLLocationManagerDelegate,MKMapViewDelegate>
@property (nonatomic, strong) CLLocationManager *manager;
@property (nonatomic, strong) MKMapView *mapView;
@property (nonatomic, strong) CLGeocoder *myGeocoder;
@property (nonatomic, strong) MKAnnotationView *annotation;
@end

@implementation MapViewController


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:YES];
    self.navigationController.navigationBarHidden = NO;
    self.navigationController.navigationBar.barTintColor = [UIColor whiteColor];
    self.navigationItem.title = @"店铺地址";
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    _manager = [[CLLocationManager alloc]init];
    _manager.delegate = self;
    [_manager requestAlwaysAuthorization];
    [_manager startUpdatingLocation];
    
    _mapView = [[MKMapView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREENHEIGHT)];
    _mapView.delegate = self;
    _mapView.showsUserLocation = YES;
    _mapView.userTrackingMode = MKUserTrackingModeNone;
    
    //设置定位精确度
    _manager.desiredAccuracy = kCLLocationAccuracyBest;
    _mapView.delegate = self;
    

    // 地理编码
    _myGeocoder = [[CLGeocoder alloc]init];
    [self.myGeocoder geocodeAddressString:@"武汉大学" completionHandler:^(NSArray *placemarks,NSError *error){
        if(nil == error && [placemarks count] > 0){
            NSLog(@"placemarks count:%lu",(unsigned long)[placemarks count]);
            CLPlacemark *pm = [placemarks objectAtIndex:0];
            NSLog(@"longitude=%f",pm.location.coordinate.longitude);
            NSLog(@"latitude=%f",pm.location.coordinate.latitude);
            CLLocationCoordinate2D coords = CLLocationCoordinate2DMake(pm.location.coordinate.latitude, pm.location.coordinate.longitude);
            
           
            // 大头针
            AnnotationModel *anno = [[AnnotationModel alloc]init];
            anno.iconName = @"category_2";
            
            anno.coordinate = CLLocationCoordinate2DMake(pm.location.coordinate.latitude, pm.location.coordinate.longitude);
            //anno.coordinate = CLLocationCoordinate2DMake(114, 30);
            
            NSLog(@"%f,%f",anno.coordinate.latitude,anno.coordinate.longitude);
           

            
            
            /*
             MKCoordinateRegion region;
             CLLocationCoordinate2D centerCoordinate = mapView.region.center;
             region.center= centerCoordinate;
             */
            
            float zoomLevel = 0.01;
            MKCoordinateRegion region = MKCoordinateRegionMake(coords, MKCoordinateSpanMake(zoomLevel, zoomLevel));
            [_mapView setRegion:region animated:YES];
//            CLLocationCoordinate2D centerCoordinate = _mapView.region.center;
//            region.center = centerCoordinate;
            //anno.coordinate = _mapView.region.center;
            //region.center = anno.coordinate;
            //[_mapView setRegion:[self.mapView regionThatFits:region] animated:YES];
            [_mapView addAnnotation:anno];
            
            
            
            
           
        }else if([placemarks count] == 0 && error == nil){
            NSLog(@"找不到给定地址的经纬度");
        }
    }];
    
    
    
    [self.view addSubview:self.mapView];
}

#pragma mark - CLLocationManager的代理方法
/** 用户拒绝或同意授权后调用*/
- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status
{
    
}


- (void)locationManager:(CLLocationManager *)manager
     didUpdateLocations:(NSArray<CLLocation *> *)locations
{
    [self.manager stopUpdatingLocation];
    
}

- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id<MKAnnotation>)annotation
{
    if ([annotation isKindOfClass:[MKUserLocation class]])
        return nil;
        
    _annotation = [self.mapView dequeueReusableAnnotationViewWithIdentifier:@"ID"];
    
    if (_annotation == nil) {
        _annotation = [[MKAnnotationView alloc]initWithAnnotation:annotation reuseIdentifier:@"ID"];
    }
    _annotation.canShowCallout = YES;
    
    // 根据模型对象，决定本大头针显示的图片样式。
    NSString *iconName = ((AnnotationModel *)annotation).iconName;
    _annotation.image = [UIImage imageNamed:iconName];
    
    
    
    return _annotation;
}

//- (void)mapView:(MKMapView *)mapView didAddAnnotationViews:(NSArray<MKAnnotationView *> *)views
//{
//    for (MKAnnotationView *view in views)
//    {
//        CGPoint endCenter = view.center;
//        CGPoint startCenter = endCenter;
//        
//        view.center = startCenter;
//        
//        [UIView animateWithDuration:0.2 animations:^{
//            view.center = endCenter;
//        }];
//    }
//}
- (void)backToDetail
{
    [self.navigationController popViewControllerAnimated:NO];
}

@end
